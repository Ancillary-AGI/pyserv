version: '3.8'

services:
  # Main application
  app:
    build:
      context: .
      target: development
    ports:
      - "8000:8000"
    volumes:
      - .:/app
      - /app/__pycache__
    environment:
      - DEBUG=true
      - DATABASE_URL=postgresql://pyserv :password@db:5432/pyserv 
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - db
      - redis
    command: python -c "from pyserv import Application; app = Application(); app.run(host='0.0.0.0', port=8000, debug=True)"
    networks:
      - pyserv 

  # PostgreSQL database
  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=pyserv 
      - POSTGRES_USER=pyserv 
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - pyserv 

  # Redis cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - pyserv 

  # PgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@pyserv .com
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      - "5050:80"
    depends_on:
      - db
    networks:
      - pyserv 

  # Redis Commander for Redis management
  redis-commander:
    image: rediscommander/redis-commander:latest
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks:
      - pyserv 

  # Testing service
  test:
    build:
      context: .
      target: testing
    volumes:
      - .:/app
      - /app/__pycache__
    environment:
      - DATABASE_URL=postgresql://pyserv :password@db:5432/pyserv _test
      - REDIS_URL=redis://redis:6379/1
    depends_on:
      - db
      - redis
    networks:
      - pyserv 
    profiles:
      - testing

  # Production service
  production:
    build:
      context: .
      target: production
    ports:
      - "8001:8000"
    environment:
      - DEBUG=false
      - DATABASE_URL=postgresql://pyserv :password@db:5432/pyserv _prod
      - REDIS_URL=redis://redis:6379/2
    depends_on:
      - db
      - redis
    networks:
      - pyserv 
    profiles:
      - production

volumes:
  postgres_data:
  redis_data:

networks:
  pyserv :
    driver: bridge




