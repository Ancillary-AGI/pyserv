[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "pydance"
dynamic = ["version"]
description = "High-Performance Web Framework with C/C++ Core"
readme = "README.md"
license = {file = "LICENSE"}
requires-python = ">=3.8"
authors = [
    {name = "PyDance Team", email = "team@pydance.dev"},
]
maintainers = [
    {name = "PyDance Team", email = "team@pydance.dev"},
]
keywords = [
    "web",
    "framework",
    "http",
    "server",
    "high-performance",
    "c-extensions",
    "security",
    "async",
    "asgi",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: C",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Security",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
]
dependencies = [
    "uvloop>=0.15.0; sys_platform != 'win32'",
    "httptools>=0.3.0",
    "jinja2>=3.0.0",
    "pydantic>=1.8.0",
    "cryptography>=3.4.0",
    "pyjwt>=2.0.0",
    "bcrypt>=3.2.0",
    "aiofiles>=0.8.0",
    "python-multipart>=0.0.5",
    "itsdangerous>=2.0.0",
    "click>=8.0.0",
    "rich>=10.0.0",
    "typer>=0.4.0",
    "email-validator>=1.1.0",
    "python-dotenv>=0.19.0",
    # Essential features that are actually used
    "phonenumbers>=8.12.0",
    "babel>=2.9.0",
    "pytz>=2021.0",
    "boto3>=1.20.0",
    "aioredis>=2.0.0",
    "aiohttp>=3.8.0",
    "psutil>=5.8.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0.0",
    "pytest-asyncio>=0.15.0",
    "pytest-cov>=2.0.0",
    "pytest-xdist>=2.0.0",
    "black>=21.0.0",
    "isort>=5.0.0",
    "flake8>=3.9.0",
    "mypy>=0.800",
    "pre-commit>=2.15.0",
    "sphinx>=4.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "sphinx-autodoc-typehints>=1.12.0",
    "towncrier>=21.3.0",
    "coverage>=5.5",
    "pytest-mock>=3.6.0",
]
security = [
    "cryptography>=3.4.0",
    "bcrypt>=3.2.0",
    "pyjwt>=2.0.0",
    "oauthlib>=3.1.0",
    "python-jose>=3.3.0",
    "authlib>=0.15.0",
    "python-multipart>=0.0.5",
]
performance = [
    "uvloop>=0.15.0",
    "httptools>=0.3.0",
    "gunicorn>=20.1.0",
    "hypercorn>=0.13.0",
    "daphne>=3.0.0",
]
database = [
    "sqlalchemy>=1.4.0",
    "alembic>=1.7.0",
    "redis>=4.0.0",
    "pymongo>=4.0.0",
    "motor>=3.0.0",
    "psycopg2-binary>=2.9.0",
    "pymysql>=1.0.0",
    "sqlalchemy-utils>=0.38.0",
    "asyncpg>=0.25.0",
    "aiomysql>=0.1.0",
]
web3 = [
    "web3>=5.25.0",
    "eth-account>=0.5.0",
    "ipfshttpclient>=0.8.0",
    "eth-abi>=2.1.0",
]
monitoring = [
    "prometheus-client>=0.12.0",
    "sentry-sdk>=1.3.0",
    "structlog>=21.1.0",
    "opentelemetry-distro>=0.33b0",
    "opentelemetry-instrumentation>=0.33b0",
    "opentelemetry-instrumentation-fastapi>=0.33b0",
    "jaeger-client>=4.0.0",
    "datadog>=0.40.0",
]
email = [
    "email-validator>=1.1.0",
    "phonenumbers>=8.12.0",
    "markdown>=3.3.0",
    "bleach>=4.1.0",
    "beautifulsoup4>=4.9.0",
    "babel>=2.9.0",
    "pytz>=2021.0",
]
storage = [
    "boto3>=1.20.0",
    "aioredis>=2.0.0",
    "google-cloud-storage>=1.40.0",
    "azure-storage-blob>=12.8.0",
    "python-magic>=0.4.0",
    "clamd>=1.0.0",
]
microservices = [
    "grpcio>=1.40.0",
    "grpcio-tools>=1.40.0",
    "protobuf>=3.17.0",
    "grpcio-health-checking>=1.40.0",
    "grpcio-reflection>=1.40.0",
    "kubernetes>=21.7.0",
    "etcd3>=0.12.0",
]
streaming = [
    "aio-pika>=7.0.0",
    "aiokafka>=0.7.0",
    "websockets>=10.0.0",
]
docs = [
    "sphinx>=4.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "sphinx-autodoc-typehints>=1.12.0",
    "myst-parser>=0.16.0",
    "sphinx-copybutton>=0.4.0",
]
all = [
    "pydance[dev,security,performance,database,web3,monitoring,email,storage,microservices,streaming,docs]",
]

[project.urls]
Homepage = "https://github.com/ancillary-ai/pydance"
Documentation = "https://pydance.dev/docs"
Repository = "https://github.com/ancillary-ai/pydance"
Issues = "https://github.com/ancillary-ai/pydance/issues"
Changelog = "https://github.com/ancillary-ai/pydance/blob/main/CHANGELOG.md"

[project.scripts]
pydance = "pydance.cli:main"
pydance-admin = "pydance.cli:admin"

[tool.setuptools]
zip-safe = false
include-package-data = true

[tool.setuptools.packages.find]
where = ["src"]
exclude = ["tests*", "docs*", "examples*"]

[tool.setuptools.package-data]
pydance = [
    "static/css/*.css",
    "static/js/*.js",
    "translations/*.json",
    "templates/**/*.html",
    "templates/**/*.jinja",
]

[tool.setuptools.dynamic]
version = {file = "src/pydance/__init__.py"}

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["pydance"]
known_third_party = [
    "uvloop",
    "httptools",
    "jinja2",
    "pydantic",
    "cryptography",
    "pyjwt",
    "bcrypt",
    "redis",
    "pymongo",
    "sqlalchemy",
    "alembic",
    "prometheus_client",
    "structlog",
    "sentry_sdk",
    "web3",
    "motor",
    "aiofiles",
    "python_multipart",
    "itsdangerous",
    "click",
    "rich",
    "typer",
    "email_validator",
    "python_dotenv",
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "uvloop.*",
    "httptools.*",
    "cryptography.*",
    "bcrypt.*",
    "redis.*",
    "pymongo.*",
    "sqlalchemy.*",
    "alembic.*",
    "prometheus_client.*",
    "sentry_sdk.*",
    "web3.*",
    "motor.*",
    "python_multipart.*",
    "itsdangerous.*",
    "email_validator.*",
]
ignore_missing_imports = true

[tool.coverage.run]
source = ["src/pydance"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "class .*\bProtocol\):",
    "@(abc\.)?abstractmethod",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--disable-warnings",
    "--cov=pydance",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-report=xml",
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "system: System tests",
    "performance: Performance tests",
    "security: Security tests",
    "slow: Slow running tests",
    "asyncio: Asyncio tests",
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]

[tool.towncrier]
package = "pydance"
filename = "CHANGELOG.md"
directory = "changelog"
title_format = "## [{version}] - {project_date}"
template = "changelog/template.md"
issue_format = "`#{issue}`"
underlines = ["", "", ""]

[[tool.towncrier.type]]
directory = "feature"
name = "Features"
showcontent = true

[[tool.towncrier.type]]
directory = "bugfix"
name = "Bug Fixes"
showcontent = true

[[tool.towncrier.type]]
directory = "doc"
name = "Documentation"
showcontent = true

[[tool.towncrier.type]]
directory = "removal"
name = "Removals and Deprecations"
showcontent = true

[[tool.towncrier.type]]
directory = "misc"
name = "Miscellaneous"
showcontent = true
